# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-5.6.2

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-10-05T12:51:21Z"
  labels:
    app: dbgate
  name: dbgate
spec:
  containers:
  - args:
    - /home/dbgate-docker/entrypoint.sh
    env:
    - name: LABEL_con2
      value: Postgres
    - name: SERVER_con2
      value: postgres
    - name: LABEL_con1
      value: MongoDB
    - name: LOGIN_PASSWORD_admin
      value: admin
    - name: USER_con2
      value: root
    - name: LOGINS
      value: admin
    - name: PORT_con2
      value: "5432"
    - name: ENGINE_con2
      value: postgres@dbgate-plugin-postgres
    - name: ENGINE_con1
      value: mongo@dbgate-plugin-mongo
    - name: CONNECTIONS
      value: con1,con2
    - name: BASIC_AUTH
      value: "true"
    - name: PASSWORD_con2
      value: example
    - name: URL_con1
      value: mongodb://root:example@mongo:27017/
    image: docker.io/dbgate/dbgate:latest
    name: dbgate
    ports:
    - containerPort: 3000
      hostPort: 8487
    volumeMounts:
    - mountPath: /root/.dbgate
      name: dbgate-flask-play-pvc
  volumes:
  - name: dbgate-flask-play-pvc
    persistentVolumeClaim:
      claimName: dbgate-flask-play
